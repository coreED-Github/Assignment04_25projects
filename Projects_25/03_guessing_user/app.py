# -*- coding: utf-8 -*-
"""project-03-_guessing-number.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/coreED-Github/fbd7a4c603aca365884eeb6e421c40fe/project-03-_guessing-number.ipynb

**Purpose:**

This code implements a number guessing game where the computer tries to guess a number that the user is thinking of, based on the user's feedback.

**Steps**
*1. User Input for Range:* The program prompts the user to define a range (lower and upper limits) for the number they are thinking of. It checks if the input values are valid integers and ensures the lower limit is less than the upper limit.


*2. Game Process:* The computer starts guessing the number by picking the midpoint of the range. It then asks the user if the guess is too high, too low, or correct.


*3. Feedback Handling:* Based on user feedback (high, low, correct), the program adjusts the range and continues guessing. It also provides hints after every 5 incorrect guesses to encourage the user.


*4. Game End: *The game continues until the computer guesses the correct number, at which point it displays a congratulatory message, including the number of attempts taken to guess it.


**Features:**

Dynamic range input from the user.

Interactive feedback loop for the user.

Provides hints after multiple incorrect guesses.
"""

import random
import time

def guess_the_number_user():
    print("Welcome to the Guess the Number Game!")
    print("Think of a number and I will try to guess it.")

    try:
        low = int(input("Enter the lower limit of your number range: "))
        high = int(input("Enter the upper limit of your number range: "))
    except ValueError:
        print("Invalid input! Please enter valid integers.")
        return

    if low >= high:
        print("The lower limit should be less than the upper limit. Try again.")
        return

    print(f"Great! I'm going to guess a number between {low} and {high}.")
    time.sleep(1)

    attempts = 0
    hint = ""

    while True:
        attempts += 1
        guess = (low + high) // 2

        print(f"Attempt {attempts}: My guess is {guess} {hint}")

        feedback = input("Is my guess too high, too low, or correct? (h/l/c): ").lower()

        if feedback == 'c':
            print(f"Yay! I guessed the correct number {guess} in {attempts} attempts. ðŸŽ‰")
            break
        elif feedback == 'h':
            high = guess - 1
            hint = "ðŸ”¼"
        elif feedback == 'l':
            low = guess + 1
            hint = "ðŸ”½"
        else:
            print("Invalid input. Please enter 'h', 'l', or 'c'.")
            attempts -= 1


        if attempts % 5 == 0 and attempts != 0:
            print("Tip: You're getting close! Keep going!")

guess_the_number_user()